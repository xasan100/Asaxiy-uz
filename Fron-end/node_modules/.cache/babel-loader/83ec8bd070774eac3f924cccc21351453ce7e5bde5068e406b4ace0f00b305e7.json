{"ast":null,"code":"var _jsxFileName = \"/Users/xasan/Desktop/asaxiyuz/Fron-end/src/index.js\";\n// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import App from './Root/App';\n\n// import {Provider} from \"react-redux\"\n// import {configureStore,} from \"@reduxjs/toolkit\"\n\n// import productsReducer, { productsFetch } from './Components/features/ProductSlice';\n// import { productsApi } from './Components/features/ProductsApi';\n\n// const store=configureStore({\n//   reducer: {\n//     products: productsReducer,\n//     [productsApi.reducerPath]: productsApi.reducer,\n//   },\n//   middleware: (getDefaultMiddleware) =>\n//     getDefaultMiddleware().concat(productsApi.middleware),\n// });\n\n// store.dispatch(productsFetch())\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <Provider store={store} >\n//     <App />\n//     </Provider>\n//   </React.StrictMode>\n// );\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './Root/App';\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport productsReducer, { productsFetch } from './Components/features/ProductSlice';\nimport { productsApi } from './Components/features/ProductsApi';\nimport CartReducer from \"./Components/features/CartSlice\";\n// import productsReducer, { productsFetch } from \"\";\n// import cartReducer, { getTotals } from \"\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = configureStore({\n  reducer: {\n    cart: CartReducer,\n    products: productsReducer,\n    [productsApi.reducerPath]: productsApi.reducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(productsApi.middleware)\n});\nstore.dispatch(productsFetch());\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 58,\n  columnNumber: 3\n}, this), document.getElementById(\"root\"));","map":{"version":3,"names":["React","ReactDOM","App","Provider","configureStore","productsReducer","productsFetch","productsApi","CartReducer","store","reducer","cart","products","reducerPath","middleware","getDefaultMiddleware","concat","dispatch","render","document","getElementById"],"sources":["/Users/xasan/Desktop/asaxiyuz/Fron-end/src/index.js"],"sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import App from './Root/App';\n\n// import {Provider} from \"react-redux\"\n// import {configureStore,} from \"@reduxjs/toolkit\"\n\n// import productsReducer, { productsFetch } from './Components/features/ProductSlice';\n// import { productsApi } from './Components/features/ProductsApi';\n\n// const store=configureStore({\n//   reducer: {\n//     products: productsReducer,\n//     [productsApi.reducerPath]: productsApi.reducer,\n//   },\n//   middleware: (getDefaultMiddleware) =>\n//     getDefaultMiddleware().concat(productsApi.middleware),\n// });\n\n// store.dispatch(productsFetch())\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <Provider store={store} >\n//     <App />\n//     </Provider>\n//   </React.StrictMode>\n// );\n\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './Root/App';\n\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\n\nimport productsReducer, { productsFetch } from './Components/features/ProductSlice';\nimport { productsApi } from './Components/features/ProductsApi';\nimport CartReducer from \"./Components/features/CartSlice\";\n// import productsReducer, { productsFetch } from \"\";\n// import cartReducer, { getTotals } from \"\";\n\nconst store = configureStore({\n  reducer: {\n    cart: CartReducer,\n    products: productsReducer,\n    [productsApi.reducerPath]: productsApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(productsApi.middleware),\n});\n\nstore.dispatch(productsFetch());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,GAAG,MAAM,YAAY;AAE5B,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAOC,eAAe,IAAIC,aAAa,QAAQ,oCAAoC;AACnF,SAASC,WAAW,QAAQ,mCAAmC;AAC/D,OAAOC,WAAW,MAAM,iCAAiC;AACzD;AACA;AAAA;AAEA,MAAMC,KAAK,GAAGL,cAAc,CAAC;EAC3BM,OAAO,EAAE;IACPC,IAAI,EAAEH,WAAW;IACjBI,QAAQ,EAAEP,eAAe;IACzB,CAACE,WAAW,CAACM,WAAW,GAAGN,WAAW,CAACG;EACzC,CAAC;EACDI,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,EAAE,CAACC,MAAM,CAACT,WAAW,CAACO,UAAU;AACxD,CAAC,CAAC;AAEFL,KAAK,CAACQ,QAAQ,CAACX,aAAa,EAAE,CAAC;AAE/BL,QAAQ,CAACiB,MAAM,eACb,QAAC,KAAK,CAAC,UAAU;EAAA,uBACf,QAAC,QAAQ;IAAC,KAAK,EAAET,KAAM;IAAA,uBACrB,QAAC,GAAG;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA;AACE;EAAA;EAAA;EAAA;AAAA,QACM,EACnBU,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}