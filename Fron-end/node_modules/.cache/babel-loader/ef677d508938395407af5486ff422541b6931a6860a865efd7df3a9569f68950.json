{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nconst initialState = {\n  cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [],\n  cartTotalQuantity: 0,\n  cartTotalAmount: 0\n};\n// const  cartSlice=createSlice({\n//     name:\"cart\",\n//     initialState,\n//     reducers:{\n//         addToCart(state, action) {\n//             const itemIndex = state.cartItems.findIndex(\n//               (item) => item.id === action.payload.id\n//      );\n//    if (itemIndex>=0) {\n//     state.cartItems[itemIndex].cartQuantity +=1;\n//     toast.info(`increased ${state.cartItems[itemIndex].item} product quantity`,{ \n//         position:\"bottom-left\" ,\n//     })\n//    }\n//    else {\n//     const tempProductItem={...action.payload,cartQuantity:1};\n//     state.cartItems.push(tempProductItem); \n\n//     toast.success(` ${action.payload.item} add new to cart` ,{\n//         position:\"bottom-left\" ,\n//        })\n//     }\n//     localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n//  },\n//  remoFromCart(state,action) {\n//    const nexTcartItms=  state.cartItems.filter((cartItem) =>cartItem.id!==action.payload.id)\n//    state.cartItems=nexTcartItms;\n//    localStorage.setItem(\"cartItems\",JSON.stringify(state.cartItems));\n//    toast.error(` ${action.payload.item} removed from cart` ,{\n//     position:\"bottom-left\" ,\n//    })\n//  },\n//  decreaseCart (state,action) {\n//  const itemIndex=state.cartItems.findIndex(\n//     cartItem =>cartItem.id===action.payload.id\n//  )\n//  if (state.cartItems[itemIndex].cartQuantity > 1) {\n//     state.cartItems[itemIndex].cartQuantity -=1\n//     toast.info(` Decreased ${action.payload.item} cart  quantitiy` ,{\n//         position:\"bottom-left\" ,\n//        })\n//  }else if ( state.cartItems[itemIndex].cartQuantity === 1) {\n\n//     const nexTcartItms=  state.cartItems.filter((cartItem) =>cartItem.id!==action.payload.id)\n//     state.cartItems=nexTcartItms;\n//     toast.error(` ${action.payload.item} removed from cart` ,{\n//         position:\"bottom-left\" ,\n//     })\n// }\n// localStorage.setItem(\"cartItems\",JSON.stringify(state.cartItems));\n// },\n// Clearcart(state,action){\n//     state.cartItems=[];\n//     toast.error(`Cart cleared` ,{\n//         position:\"bottom-left\" ,\n//     });\n// localStorage.setItem(\"cartItems\",JSON.stringify(state.cartItems));\n// },\n//     getToals(state,action) {\n//      let{total,quantity}=state.cartItems.reducer((cartTotal,cartItem)=>{\n//             const  {price,cartQuantity}=cartItem;\n//             const itemTotal=price*cartQuantity;\n//             cartTotal.total+=itemTotal\n//             cartTotal.quantity+=quantity\n//             return cartTotal\n//         },{\n//             total:0,\n//             quantity:0\n//         })\n//         state.cartTotalQuantity=quantity;\n//         state.cartTotalAmount=total;\n//     }\n// },\n// });\n\nexport const {\n  addToCart,\n  remoFromCart,\n  decreaseCart,\n  Clearcart,\n  getToals\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","toast","initialState","cartItems","localStorage","getItem","JSON","parse","cartTotalQuantity","cartTotalAmount","addToCart","remoFromCart","decreaseCart","Clearcart","getToals","cartSlice","actions","reducer"],"sources":["/Users/xasan/Desktop/asaxiyuz/Fron-end/src/Components/features/cartSlice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\"\nimport {toast} from \"react-toastify\"\nconst initialState={\n      cartItems: localStorage.getItem(\"cartItems\")\n    ? JSON.parse(localStorage.getItem(\"cartItems\"))\n    : [],\n    cartTotalQuantity: 0,\n    cartTotalAmount: 0,\n\n \n}\n// const  cartSlice=createSlice({\n//     name:\"cart\",\n//     initialState,\n//     reducers:{\n//         addToCart(state, action) {\n//             const itemIndex = state.cartItems.findIndex(\n//               (item) => item.id === action.payload.id\n//      );\n//    if (itemIndex>=0) {\n//     state.cartItems[itemIndex].cartQuantity +=1;\n//     toast.info(`increased ${state.cartItems[itemIndex].item} product quantity`,{ \n//         position:\"bottom-left\" ,\n//     })\n//    }\n//    else {\n//     const tempProductItem={...action.payload,cartQuantity:1};\n//     state.cartItems.push(tempProductItem); \n\n//     toast.success(` ${action.payload.item} add new to cart` ,{\n//         position:\"bottom-left\" ,\n//        })\n//     }\n//     localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n//  },\n//  remoFromCart(state,action) {\n//    const nexTcartItms=  state.cartItems.filter((cartItem) =>cartItem.id!==action.payload.id)\n//    state.cartItems=nexTcartItms;\n//    localStorage.setItem(\"cartItems\",JSON.stringify(state.cartItems));\n//    toast.error(` ${action.payload.item} removed from cart` ,{\n//     position:\"bottom-left\" ,\n//    })\n//  },\n//  decreaseCart (state,action) {\n//  const itemIndex=state.cartItems.findIndex(\n//     cartItem =>cartItem.id===action.payload.id\n//  )\n//  if (state.cartItems[itemIndex].cartQuantity > 1) {\n//     state.cartItems[itemIndex].cartQuantity -=1\n//     toast.info(` Decreased ${action.payload.item} cart  quantitiy` ,{\n//         position:\"bottom-left\" ,\n//        })\n//  }else if ( state.cartItems[itemIndex].cartQuantity === 1) {\n\n//     const nexTcartItms=  state.cartItems.filter((cartItem) =>cartItem.id!==action.payload.id)\n//     state.cartItems=nexTcartItms;\n//     toast.error(` ${action.payload.item} removed from cart` ,{\n//         position:\"bottom-left\" ,\n//     })\n// }\n// localStorage.setItem(\"cartItems\",JSON.stringify(state.cartItems));\n// },\n// Clearcart(state,action){\n//     state.cartItems=[];\n//     toast.error(`Cart cleared` ,{\n//         position:\"bottom-left\" ,\n//     });\n// localStorage.setItem(\"cartItems\",JSON.stringify(state.cartItems));\n// },\n//     getToals(state,action) {\n//      let{total,quantity}=state.cartItems.reducer((cartTotal,cartItem)=>{\n//             const  {price,cartQuantity}=cartItem;\n//             const itemTotal=price*cartQuantity;\n//             cartTotal.total+=itemTotal\n//             cartTotal.quantity+=quantity\n//             return cartTotal\n//         },{\n//             total:0,\n//             quantity:0\n//         })\n//         state.cartTotalQuantity=quantity;\n//         state.cartTotalAmount=total;\n//     }\n// },\n// });\n\n\n\n\nexport const { addToCart, remoFromCart,decreaseCart,Clearcart,getToals }=cartSlice.actions;\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,KAAK,QAAO,gBAAgB;AACpC,MAAMC,YAAY,GAAC;EACbC,SAAS,EAAEC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAC5CC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAC7C,EAAE;EACJG,iBAAiB,EAAE,CAAC;EACpBC,eAAe,EAAE;AAGrB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,OAAO,MAAM;EAAEC,SAAS;EAAEC,YAAY;EAACC,YAAY;EAACC,SAAS;EAACC;AAAS,CAAC,GAACC,SAAS,CAACC,OAAO;AAC1F,eAAeD,SAAS,CAACE,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}