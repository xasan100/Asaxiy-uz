{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nconst initialState = {\n  cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [],\n  cartTotalQuantity: 0,\n  CartTotalAmount: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart(state, action) {\n      const itemIndex = state.cartItems.findIndex(item => item.id === action.payload.id);\n      if (itemIndex >= 0) {\n        state.cartItems[itemIndex].cartQuantity += 1;\n        toast.info(`increased ${state.cartItems[itemIndex].brand} product quantity`, {\n          position: \"bottom-left\"\n        });\n      } else {\n        const tempProductItem = {\n          ...action.payload,\n          cartQuantity: 1\n        };\n        state.cartItems.push(tempProductItem);\n        toast.success(` ${action.payload.brand} add new to cart`, {\n          position: \"bottom-left\"\n        });\n      }\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n    remoFromCart(state, action) {\n      const nexTcartItms = state.cartItems.filter(cartItem => cartItem.id !== action.payload.id);\n      state.cartItems = nexTcartItms;\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n      toast.error(` ${action.payload.brand} removed from cart`, {\n        position: \"bottom-left\"\n      });\n    },\n    decreaseCart(state, action) {\n      const item = state.cartItems.findIndex(cartItem => cartItem.id === action.payload.id);\n      if (state.cartItems[item].cartQuantity > 1) {\n        state.cartItems[item].cartQuantity -= 1;\n        toast.info(` Decreased ${action.payload.brand} cart  quantitiy`, {\n          position: \"bottom-left\"\n        });\n      } else if (state.cartItems[item].cartQuantity === 1) {\n        const nexTcartItms = state.cartItems.filter(cartItem => cartItem.id !== action.payload.id);\n        state.cartItems = nexTcartItms;\n        toast.error(` ${action.payload.brand} removed from cart`, {\n          position: \"bottom-left\"\n        });\n      }\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n    Clearcart(state, action) {\n      state.cartItems = [];\n      toast.error(`Cart cleared`, {\n        position: \"bottom-left\"\n      });\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n    getToals(state, action) {\n      let {\n        total,\n        quantity\n      } = state.cartItems.reducer((cartTotal, cartItem) => {\n        const {\n          price,\n          cartQuantity\n        } = cartItem;\n        const itemTotal = price * cartQuantity;\n        cartTotal.total += itemTotal;\n        cartTotal.quantity += quantity;\n        return cartTotal;\n      }, {\n        total: 0,\n        quantity: 0\n      });\n      state.cartTotalQuantity = quantity;\n      state.cartTotalAmount = total;\n    }\n  }\n});\nexport const {\n  addToCart,\n  remoFromCart,\n  decreaseCart,\n  Clearcart,\n  getToals\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","toast","initialState","cartItems","localStorage","getItem","JSON","parse","cartTotalQuantity","CartTotalAmount","cartSlice","name","reducers","addToCart","state","action","itemIndex","findIndex","item","id","payload","cartQuantity","info","brand","position","tempProductItem","push","success","setItem","stringify","remoFromCart","nexTcartItms","filter","cartItem","error","decreaseCart","Clearcart","getToals","total","quantity","reducer","cartTotal","price","itemTotal","cartTotalAmount","actions"],"sources":["/Users/xasan/Desktop/asaxiyuz/Fron-end/src/Components/features/cartSlice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\"\nimport {toast} from \"react-toastify\"\nconst initialState={\n      cartItems: localStorage.getItem(\"cartItems\")\n    ? JSON.parse(localStorage.getItem(\"cartItems\"))\n    : [],\n    cartTotalQuantity:0,\n    CartTotalAmount:0,\n\n}\nconst  cartSlice=createSlice({\n    name:\"cart\",\n    initialState,\n    reducers:{\n        addToCart(state, action) {\n            const itemIndex = state.cartItems.findIndex(\n              (item) => item.id === action.payload.id\n     );\n   if (itemIndex>=0) {\n    state.cartItems[itemIndex].cartQuantity +=1;\n    toast.info(`increased ${state.cartItems[itemIndex].brand} product quantity`,{ \n        position:\"bottom-left\" ,\n    })\n   }\n   else {\n    const tempProductItem={...action.payload,cartQuantity:1};\n    state.cartItems.push(tempProductItem); \n\n    toast.success(` ${action.payload.brand} add new to cart` ,{\n        position:\"bottom-left\" ,\n       })\n    }\n    localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n },\n remoFromCart(state,action) {\n   const nexTcartItms=  state.cartItems.filter((cartItem) =>cartItem.id!==action.payload.id)\n   state.cartItems=nexTcartItms;\n   localStorage.setItem(\"cartItems\",JSON.stringify(state.cartItems));\n   toast.error(` ${action.payload.brand} removed from cart` ,{\n    position:\"bottom-left\" ,\n   })\n },\n decreaseCart (state,action) {\n const item=state.cartItems.findIndex(\n    cartItem =>cartItem.id===action.payload.id\n )\n if (state.cartItems[item].cartQuantity > 1) {\n    state.cartItems[item].cartQuantity -=1\n    toast.info(` Decreased ${action.payload.brand} cart  quantitiy` ,{\n        position:\"bottom-left\" ,\n       })\n }else if ( state.cartItems[item].cartQuantity === 1) {\n\n    const nexTcartItms=  state.cartItems.filter((cartItem) =>cartItem.id!==action.payload.id)\n    state.cartItems=nexTcartItms;\n    toast.error(` ${action.payload.brand} removed from cart` ,{\n        position:\"bottom-left\" ,\n    })\n}\nlocalStorage.setItem(\"cartItems\",JSON.stringify(state.cartItems));\n},\nClearcart(state,action){\n    state.cartItems=[];\n    toast.error(`Cart cleared` ,{\n        position:\"bottom-left\" ,\n    });\nlocalStorage.setItem(\"cartItems\",JSON.stringify(state.cartItems));\n},\n    getToals(state,action) {\n     let{total,quantity}=state.cartItems.reducer((cartTotal,cartItem)=>{\n            const  {price,cartQuantity}=cartItem;\n            const itemTotal=price*cartQuantity;\n            cartTotal.total+=itemTotal\n            cartTotal.quantity+=quantity\n            return cartTotal\n        },{\n            total:0,\n            quantity:0\n        })\n        state.cartTotalQuantity=quantity;\n        state.cartTotalAmount=total;\n    }\n},\n\n\n});\n\nexport const { addToCart, remoFromCart,decreaseCart,Clearcart,getToals }=cartSlice.actions;\nexport default cartSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}