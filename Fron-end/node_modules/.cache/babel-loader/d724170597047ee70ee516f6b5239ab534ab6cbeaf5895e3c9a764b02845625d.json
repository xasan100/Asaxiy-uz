{"ast":null,"code":"// import { createSlice ,createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n// import  axios from \"axios\"\nimport axios from \"axios\";\nconst initialState = {\n  items: [],\n  status: null\n};\n\n// export const productsFetch=createAsyncThunk(\n//     \"products/productsFetch\",\n//    async ()=>{\n//       const response=  await axios.get('http://localhost:5000/productsds')\n//       return response?.data\n//     }\n//     );\n\n// const productsSlice=createSlice({\n//     name:\"products\",\n//     initialState,\n//     reducers:{},\n//     extraReducers:{\n//         [productsFetch.pending]:(state,action)=>{\n//             state.status = \"pending\"\n//         },\n//         [productsFetch.fulfilled]:(state,action)=>{\n//                 state.items=action.payload;\n//                 state.status = \"success\";\n//         },  \n//         [productsFetch.rejected]:(state,action)=>{\n//             state.status = \"rejected\";\n\n//         },\n//     },\n// });\n// export default productsSlice.reducer\n\nconst productsSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [productsFetch.pending]: (state, action) => {\n      state.status = \"pending\";\n    },\n    [productsFetch.fulfilled]: (state, action) => {\n      state.items = action.payload;\n      state.status = \"success\";\n    },\n    [productsFetch.rejected]: (state, action) => {\n      state.status = \"rejected\";\n    }\n  }\n});\nexport default productsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","items","status","productsSlice","name","reducers","extraReducers","productsFetch","pending","state","action","fulfilled","payload","rejected","reducer"],"sources":["/Users/xasan/Desktop/asaxiyuz/Fron-end/src/Components/features/ProductSlice.js"],"sourcesContent":["// import { createSlice ,createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n// import  axios from \"axios\"\nimport axios from \"axios\";\n\n\nconst initialState={\n    items:[],\n    status:null,\n}\n\n\n// export const productsFetch=createAsyncThunk(\n//     \"products/productsFetch\",\n//    async ()=>{\n//       const response=  await axios.get('http://localhost:5000/productsds')\n//       return response?.data\n//     }\n//     );\n\n// const productsSlice=createSlice({\n//     name:\"products\",\n//     initialState,\n//     reducers:{},\n//     extraReducers:{\n//         [productsFetch.pending]:(state,action)=>{\n//             state.status = \"pending\"\n//         },\n//         [productsFetch.fulfilled]:(state,action)=>{\n//                 state.items=action.payload;\n//                 state.status = \"success\";\n//         },  \n//         [productsFetch.rejected]:(state,action)=>{\n//             state.status = \"rejected\";\n        \n//         },\n//     },\n// });\n// export default productsSlice.reducer\n\nconst productsSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [productsFetch.pending]: (state, action) => {\n      state.status = \"pending\";\n    },\n    [productsFetch.fulfilled]: (state, action) => {\n      state.items = action.payload;\n      state.status = \"success\";\n    },\n    [productsFetch.rejected]: (state, action) => {\n      state.status = \"rejected\";\n    },\n  },\n});\n\nexport default productsSlice.reducer;\n\n\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE;AACA,OAAOC,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAC;EACfC,KAAK,EAAC,EAAE;EACRC,MAAM,EAAC;AACX,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,aAAa,GAAGN,WAAW,CAAC;EAChCO,IAAI,EAAE,UAAU;EAChBJ,YAAY;EACZK,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAE;IACb,CAACC,aAAa,CAACC,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1CD,KAAK,CAACP,MAAM,GAAG,SAAS;IAC1B,CAAC;IACD,CAACK,aAAa,CAACI,SAAS,GAAG,CAACF,KAAK,EAAEC,MAAM,KAAK;MAC5CD,KAAK,CAACR,KAAK,GAAGS,MAAM,CAACE,OAAO;MAC5BH,KAAK,CAACP,MAAM,GAAG,SAAS;IAC1B,CAAC;IACD,CAACK,aAAa,CAACM,QAAQ,GAAG,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC3CD,KAAK,CAACP,MAAM,GAAG,UAAU;IAC3B;EACF;AACF,CAAC,CAAC;AAEF,eAAeC,aAAa,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}