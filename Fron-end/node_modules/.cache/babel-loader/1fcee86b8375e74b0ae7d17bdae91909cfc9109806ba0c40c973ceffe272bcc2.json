{"ast":null,"code":"// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import App from './Root/App';\n\n// import {Provider} from \"react-redux\"\n// import {configureStore,} from \"@reduxjs/toolkit\"\n\n// import productsReducer, { productsFetch } from './Components/features/ProductSlice';\n// import { productsApi } from './Components/features/ProductsApi';\n\n// const store=configureStore({\n//   reducer: {\n//     products: productsReducer,\n//     [productsApi.reducerPath]: productsApi.reducer,\n//   },\n//   middleware: (getDefaultMiddleware) =>\n//     getDefaultMiddleware().concat(productsApi.middleware),\n// });\n\n// store.dispatch(productsFetch())\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <Provider store={store} >\n//     <App />\n//     </Provider>\n//   </React.StrictMode>\n// );\n\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import App from \"./App\";\n\n// import { Provider } from \"react-redux\";\n// import { configureStore } from \"@reduxjs/toolkit\";\n\n// import productsReducer, { productsFetch } from \"./slices/productsSlice\";\n// import cartReducer, { getTotals } from \"./slices/cartSlice\";\n// import { productsApi } from \"./slices/productsApi\";\n\n// const store = configureStore({\n//   reducer: {\n//     products: productsReducer,\n//     cart: cartReducer,\n//     [productsApi.reducerPath]: productsApi.reducer,\n//   },\n//   middleware: (getDefaultMiddleware) =>\n//     getDefaultMiddleware().concat(productsApi.middleware),\n// });\n\n// store.dispatch(productsFetch());\n// store.dispatch(getTotals());\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <Provider store={store}>\n//       <App />\n//     </Provider>\n//   </React.StrictMode>,\n//   document.getElementById(\"root\")\n// );","map":{"version":3,"names":[],"sources":["/Users/xasan/Desktop/asaxiyuz/Fron-end/src/index.js"],"sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import App from './Root/App';\n\n// import {Provider} from \"react-redux\"\n// import {configureStore,} from \"@reduxjs/toolkit\"\n\n// import productsReducer, { productsFetch } from './Components/features/ProductSlice';\n// import { productsApi } from './Components/features/ProductsApi';\n\n// const store=configureStore({\n//   reducer: {\n//     products: productsReducer,\n//     [productsApi.reducerPath]: productsApi.reducer,\n//   },\n//   middleware: (getDefaultMiddleware) =>\n//     getDefaultMiddleware().concat(productsApi.middleware),\n// });\n\n// store.dispatch(productsFetch())\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <Provider store={store} >\n//     <App />\n//     </Provider>\n//   </React.StrictMode>\n// );\n\n\n\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import App from \"./App\";\n\n// import { Provider } from \"react-redux\";\n// import { configureStore } from \"@reduxjs/toolkit\";\n\n// import productsReducer, { productsFetch } from \"./slices/productsSlice\";\n// import cartReducer, { getTotals } from \"./slices/cartSlice\";\n// import { productsApi } from \"./slices/productsApi\";\n\n// const store = configureStore({\n//   reducer: {\n//     products: productsReducer,\n//     cart: cartReducer,\n//     [productsApi.reducerPath]: productsApi.reducer,\n//   },\n//   middleware: (getDefaultMiddleware) =>\n//     getDefaultMiddleware().concat(productsApi.middleware),\n// });\n\n// store.dispatch(productsFetch());\n// store.dispatch(getTotals());\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <Provider store={store}>\n//       <App />\n//     </Provider>\n//   </React.StrictMode>,\n//   document.getElementById(\"root\")\n// );"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}