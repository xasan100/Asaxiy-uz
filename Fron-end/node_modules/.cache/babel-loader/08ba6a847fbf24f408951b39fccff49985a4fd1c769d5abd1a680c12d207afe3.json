{"ast":null,"code":"// import { createSlice ,createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n// import  axios from \"axios\"\nimport axios from \"axios\";\nconst initialState = {\n  items: [],\n  status: null\n};\nexport const productsFetch = createAsyncThunk(\"products/productsFetch\", async function () {\n  let id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  let {\n    rejectWithValue\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  const response = await axios.get('http://localhost:5000/products');\n  return response === null || response === void 0 ? void 0 : response.data;\n});\nconst productsSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [productsFetch.pending]: (state, action) => {\n      state.status = \"pending\";\n    },\n    [productsFetch.fulfilled]: (state, action) => {\n      state.items = action.payload;\n      state.status = \"success\";\n    },\n    [productsFetch.rejected]: (state, action) => {\n      state.status = \"rejected\";\n    }\n  }\n});\nexport default productsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","items","status","productsFetch","id","rejectWithValue","response","get","data","productsSlice","name","reducers","extraReducers","pending","state","action","fulfilled","payload","rejected","reducer"],"sources":["/Users/xasan/Desktop/asaxiyuz/Fron-end/src/Components/features/ProductSlice.js"],"sourcesContent":["// import { createSlice ,createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n// import  axios from \"axios\"\nimport axios from \"axios\";\n\n\nconst initialState={\n    items:[],\n    status:null,\n}\n\n\nexport const productsFetch=createAsyncThunk(\n    \"products/productsFetch\",\n   async (id=null,{rejectWithValue\n})=>{\n      const response=  await axios.get('http://localhost:5000/products')\n      return response?.data\n    }\n    );\n\nconst productsSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [productsFetch.pending]: (state, action) => {\n      state.status = \"pending\";\n    },\n    [productsFetch.fulfilled]: (state, action) => {\n      state.items = action.payload;\n      state.status = \"success\";\n    },\n    [productsFetch.rejected]: (state, action) => {\n      state.status = \"rejected\";\n    },\n  },\n});\n\nexport default productsSlice.reducer;\n\n\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE;AACA,OAAOC,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAC;EACfC,KAAK,EAAC,EAAE;EACRC,MAAM,EAAC;AACX,CAAC;AAGD,OAAO,MAAMC,aAAa,GAACL,gBAAgB,CACvC,wBAAwB,EACzB,kBACC;EAAA,IADMM,EAAE,uEAAC,IAAI;EAAA,IAAC;IAACC;EACnB,CAAC;EACK,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,gCAAgC,CAAC;EAClE,OAAOD,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,IAAI;AACvB,CAAC,CACA;AAEL,MAAMC,aAAa,GAAGZ,WAAW,CAAC;EAChCa,IAAI,EAAE,UAAU;EAChBV,YAAY;EACZW,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAE;IACb,CAACT,aAAa,CAACU,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1CD,KAAK,CAACZ,MAAM,GAAG,SAAS;IAC1B,CAAC;IACD,CAACC,aAAa,CAACa,SAAS,GAAG,CAACF,KAAK,EAAEC,MAAM,KAAK;MAC5CD,KAAK,CAACb,KAAK,GAAGc,MAAM,CAACE,OAAO;MAC5BH,KAAK,CAACZ,MAAM,GAAG,SAAS;IAC1B,CAAC;IACD,CAACC,aAAa,CAACe,QAAQ,GAAG,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC3CD,KAAK,CAACZ,MAAM,GAAG,UAAU;IAC3B;EACF;AACF,CAAC,CAAC;AAEF,eAAeO,aAAa,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}