{"ast":null,"code":"import { createApi, fetchBaseQueary } from \"@reduxjs/toolkit/query/react\";\n// import { createApi, fetchBaseQueary } from \"@reduxjs/toolkit/query/react\";\n\nexport const productsApi = createApi({\n  reducerPath: \"productsApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"http://localhost:5000\"\n  }),\n  endpoints: builder => ({\n    getAllProducts: builder.query({\n      query: () => \"products\"\n    })\n  })\n});\nexport const {\n  useGetAllProductsQuery\n} = productsApi;\n\n// export const productsApi = createApi({\n//     reducerPath: \"productsApi\",\n//     baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:5000/\" }),\n//     endpoints: (builder) => ({\n//       getAllProducts: builder.query({\n//         query: () => `products`,\n//       }),\n//     }),\n//   });\n\n// export const {useGetAllProductsQuery} =produsctApi\n\n// // Need to use the React-specific entry point to import createApi\n// import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\n// // Define a service using a base URL and expected endpoints\n// export const productsApi = createApi({\n//   reducerPath: \"productsApi\",\n//   baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:5000/\" }),\n//   endpoints: (builder) => ({\n//     getAllProducts: builder.query({\n//       query: () => `products`,\n//     }),\n//   }),\n// });\n\n// // Export hooks for usage in functional components, which are\n// // auto-generated based on the defined endpoints\n// export const { useGetAllProductsQuery } = productsApi;","map":{"version":3,"names":["createApi","fetchBaseQueary","productsApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getAllProducts","query","useGetAllProductsQuery"],"sources":["/Users/xasan/Desktop/asaxiyuz/Fron-end/src/Components/features/ProductsApi.js"],"sourcesContent":["import { createApi,fetchBaseQueary } from \"@reduxjs/toolkit/query/react\";\n// import { createApi, fetchBaseQueary } from \"@reduxjs/toolkit/query/react\";\n\nexport const productsApi=createApi({\n    reducerPath:\"productsApi\",\n    baseQuery:fetchBaseQuery({baseUrl:\"http://localhost:5000\"}),\n    endpoints:(builder)=>({\n        getAllProducts: builder.query({\n            query:()=>\"products\"\n        }),\n    }),\n});\n\nexport const {useGetAllProductsQuery}=productsApi\n\n// export const productsApi = createApi({\n//     reducerPath: \"productsApi\",\n//     baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:5000/\" }),\n//     endpoints: (builder) => ({\n//       getAllProducts: builder.query({\n//         query: () => `products`,\n//       }),\n//     }),\n//   });\n\n// export const {useGetAllProductsQuery} =produsctApi\n\n\n// // Need to use the React-specific entry point to import createApi\n// import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\n// // Define a service using a base URL and expected endpoints\n// export const productsApi = createApi({\n//   reducerPath: \"productsApi\",\n//   baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:5000/\" }),\n//   endpoints: (builder) => ({\n//     getAllProducts: builder.query({\n//       query: () => `products`,\n//     }),\n//   }),\n// });\n\n// // Export hooks for usage in functional components, which are\n// // auto-generated based on the defined endpoints\n// export const { useGetAllProductsQuery } = productsApi;"],"mappings":"AAAA,SAASA,SAAS,EAACC,eAAe,QAAQ,8BAA8B;AACxE;;AAEA,OAAO,MAAMC,WAAW,GAACF,SAAS,CAAC;EAC/BG,WAAW,EAAC,aAAa;EACzBC,SAAS,EAACC,cAAc,CAAC;IAACC,OAAO,EAAC;EAAuB,CAAC,CAAC;EAC3DC,SAAS,EAAEC,OAAO,KAAI;IAClBC,cAAc,EAAED,OAAO,CAACE,KAAK,CAAC;MAC1BA,KAAK,EAAC,MAAI;IACd,CAAC;EACL,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAM;EAACC;AAAsB,CAAC,GAACT,WAAW;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}