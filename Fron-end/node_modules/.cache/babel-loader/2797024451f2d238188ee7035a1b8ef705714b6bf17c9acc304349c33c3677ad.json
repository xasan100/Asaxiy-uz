{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nconst initialState = {\n  cartItems: [],\n  cartTotalQuantity: 0,\n  cartTotalAmount: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart(state, action) {\n      const itemIndex = state.cartItems.findIndex(item => item.id === action.payload.id);\n\n      //    if (existingIndex >= 0) {\n      //     state.cartItems[existingIndex] = {\n      //       ...state.cartItems[existingIndex],\n      //       cartQuantity: state.cartItems[existingIndex].cartQuantity + 1,\n      //     };\n      //     toast.info(\"Increased product quantity\", {\n      //       position: \"bottom-left\",\n      //     });\n\n      if (itemIndex >= 0) {\n        state.cartItems[itemIndex].cartQuantity += 1;\n        toast.info('increased product quantity', {\n          position: \"bottom-left\"\n        });\n      } else {\n        const tempProductItem = {\n          ...action.payload,\n          cartQuantity: 1\n        };\n        state.cartItems.push(tempProductItem);\n        toast.success(\"added a new product to cart\", {\n          position: \"bottom-left\"\n        });\n      }\n    }\n  }\n});\nexport const {\n  addToCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","toast","initialState","cartItems","cartTotalQuantity","cartTotalAmount","cartSlice","name","reducers","addToCart","state","action","itemIndex","findIndex","item","id","payload","cartQuantity","info","position","tempProductItem","push","success","actions","reducer"],"sources":["/Users/xasan/Desktop/asaxiyuz/Fron-end/src/Components/features/cartSlice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\"\nimport {toast} from \"react-toastify\"\nconst initialState={\n    cartItems:[],\n    cartTotalQuantity:0,\n    cartTotalAmount:0,\n\n}\nconst  cartSlice=createSlice({\n    name:\"cart\",\n    initialState,\n    reducers:{\n        addToCart(state,action){\n   const itemIndex =  state.cartItems.findIndex(item => item.id===action.payload.id);\n\n//    if (existingIndex >= 0) {\n//     state.cartItems[existingIndex] = {\n//       ...state.cartItems[existingIndex],\n//       cartQuantity: state.cartItems[existingIndex].cartQuantity + 1,\n//     };\n//     toast.info(\"Increased product quantity\", {\n//       position: \"bottom-left\",\n//     });\n\n\n\n   if (itemIndex>=0) {\n    state.cartItems[itemIndex].cartQuantity +=1;\n    toast.info('increased product quantity',{ \n        position:\"bottom-left\" ,\n    })\n   }\n   else {\n    const tempProductItem={...action.payload,cartQuantity:1};\n    state.cartItems.push(tempProductItem); \n    toast.success(\"added a new product to cart\",{\n    position:\"bottom-left\" ,\n\n   })\n    }\n      },\n    },\n});\n\nexport const { addToCart }=cartSlice.actions;\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,KAAK,QAAO,gBAAgB;AACpC,MAAMC,YAAY,GAAC;EACfC,SAAS,EAAC,EAAE;EACZC,iBAAiB,EAAC,CAAC;EACnBC,eAAe,EAAC;AAEpB,CAAC;AACD,MAAOC,SAAS,GAACN,WAAW,CAAC;EACzBO,IAAI,EAAC,MAAM;EACXL,YAAY;EACZM,QAAQ,EAAC;IACLC,SAAS,CAACC,KAAK,EAACC,MAAM,EAAC;MAC5B,MAAMC,SAAS,GAAIF,KAAK,CAACP,SAAS,CAACU,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAGJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;;MAEpF;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAIG,IAAIH,SAAS,IAAE,CAAC,EAAE;QACjBF,KAAK,CAACP,SAAS,CAACS,SAAS,CAAC,CAACK,YAAY,IAAG,CAAC;QAC3ChB,KAAK,CAACiB,IAAI,CAAC,4BAA4B,EAAC;UACpCC,QAAQ,EAAC;QACb,CAAC,CAAC;MACH,CAAC,MACI;QACJ,MAAMC,eAAe,GAAC;UAAC,GAAGT,MAAM,CAACK,OAAO;UAACC,YAAY,EAAC;QAAC,CAAC;QACxDP,KAAK,CAACP,SAAS,CAACkB,IAAI,CAACD,eAAe,CAAC;QACrCnB,KAAK,CAACqB,OAAO,CAAC,6BAA6B,EAAC;UAC5CH,QAAQ,EAAC;QAEV,CAAC,CAAC;MACD;IACE;EACF;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEV;AAAU,CAAC,GAACH,SAAS,CAACiB,OAAO;AAC5C,eAAejB,SAAS,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}