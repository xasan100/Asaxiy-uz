{"ast":null,"code":"// import { createSlice ,createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n// import  axios from \"axios\"\nimport axios from \"axios\";\n\n// const initialState={\n//     itmes:[],\n//     status:null,\n// }\nconst initialState = {\n  items: [],\n  status: null\n};\n\n// export const productsFetch=createAsyncThunk(\n//     \"products/productsFetch\",\n//    async ()=>{\n//       const response=  await axios.get('http://localhost:5000/products')\n//       return response?.data\n//     }\n//     );\nexport const productsFetch = createAsyncThunk(\"products/productsFetch\", async () => {\n  try {\n    const response = await axios.get(\"http://localhost:5000/products\");\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nconst productsSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [productsFetch.pending]: (state, action) => {\n      state.status = \"pending\";\n    },\n    [productsFetch.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.itmes = action.pyload;\n    },\n    [productsFetch.rejected]: (state, action) => {\n      state.status = \"rejected\";\n    }\n  }\n});\nexport default productsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","items","status","productsFetch","response","get","data","error","console","log","productsSlice","name","reducers","extraReducers","pending","state","action","fulfilled","itmes","pyload","rejected","reducer"],"sources":["/Users/xasan/Desktop/asaxiyuz/Fron-end/src/Components/features/ProductSlice.js"],"sourcesContent":["// import { createSlice ,createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n// import  axios from \"axios\"\nimport axios from \"axios\";\n\n\n// const initialState={\n//     itmes:[],\n//     status:null,\n// }\nconst initialState = {\n  items: [],\n  status: null,\n};\n\n// export const productsFetch=createAsyncThunk(\n//     \"products/productsFetch\",\n//    async ()=>{\n//       const response=  await axios.get('http://localhost:5000/products')\n//       return response?.data\n//     }\n//     );\nexport const productsFetch = createAsyncThunk(\n  \"products/productsFetch\",\n  async () => {\n    try {\n      const response = await axios.get(\n        \"http://localhost:5000/products\"\n      );\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n);\n\nconst productsSlice=createSlice({\n    name:\"products\",\n    initialState,\n    reducers:{},\n    extraReducers:{\n        [productsFetch.pending]:(state,action)=>{\n            state.status = \"pending\"\n        },\n        [productsFetch.fulfilled]:(state,action)=>{\n            state.status = \"success\";\n            state.itmes=action.pyload;\n        },  \n        [productsFetch.rejected]:(state,action)=>{\n            state.status = \"rejected\";\n        \n        },\n    }\n})\nexport default productsSlice.reducer\n\n\n\n\n\n\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE;AACA,OAAOC,KAAK,MAAM,OAAO;;AAGzB;AACA;AACA;AACA;AACA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE;AACV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,aAAa,GAAGL,gBAAgB,CAC3C,wBAAwB,EACxB,YAAY;EACV,IAAI;IACF,MAAMM,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAC9B,gCAAgC,CACjC;IACD,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC,CACF;AAED,MAAMG,aAAa,GAACb,WAAW,CAAC;EAC5Bc,IAAI,EAAC,UAAU;EACfX,YAAY;EACZY,QAAQ,EAAC,CAAC,CAAC;EACXC,aAAa,EAAC;IACV,CAACV,aAAa,CAACW,OAAO,GAAE,CAACC,KAAK,EAACC,MAAM,KAAG;MACpCD,KAAK,CAACb,MAAM,GAAG,SAAS;IAC5B,CAAC;IACD,CAACC,aAAa,CAACc,SAAS,GAAE,CAACF,KAAK,EAACC,MAAM,KAAG;MACtCD,KAAK,CAACb,MAAM,GAAG,SAAS;MACxBa,KAAK,CAACG,KAAK,GAACF,MAAM,CAACG,MAAM;IAC7B,CAAC;IACD,CAAChB,aAAa,CAACiB,QAAQ,GAAE,CAACL,KAAK,EAACC,MAAM,KAAG;MACrCD,KAAK,CAACb,MAAM,GAAG,UAAU;IAE7B;EACJ;AACJ,CAAC,CAAC;AACF,eAAeQ,aAAa,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}